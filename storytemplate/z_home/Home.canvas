{
	"nodes":[
		{"id":"3713ced9ab632ebd","type":"group","x":-1920,"y":-520,"width":2040,"height":1180,"color":"3","label":"Stories"},
		{"id":"302f83b8d59857a8","type":"group","x":120,"y":-981,"width":1340,"height":1641,"color":"6","label":"Wiki"},
		{"id":"bfb4dd9e99d6b31e","type":"group","x":-900,"y":-984,"width":1020,"height":380,"color":"1","label":"Quick Access"},
		{"id":"7273793c2cfa2e43","type":"group","x":-1920,"y":-981,"width":1020,"height":377,"color":"5","label":"Vault Statistics"},
		{"id":"3dd1bded49c0053b","type":"text","text":"```dataviewjs\n// Get all folders in the vault\nconst folders = app.vault.getAllLoadedFiles().filter(file => file.children !== undefined);\nconst totalFolders = folders.length;\n\n// Display the formatted folder count\ndv.paragraph(`# Total Folders: ${totalFolders.toLocaleString()}`);\n```","x":-1902,"y":-736,"width":491,"height":113},
		{"id":"84098027dae63582","type":"text","text":"# 🌐 [[Settings]]\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiBlock\", {\n  folder: \"Wiki/Settings\"\n});\n```\n","x":574,"y":-958,"width":433,"height":436},
		{"id":"8f5682622d14653c","type":"text","text":"# 🧑‍🤝‍🧑 [[Groups]]\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiBlock\", {\n  folder: \"Wiki/Groups\"\n});\n```\n","x":1007,"y":-958,"width":433,"height":436},
		{"id":"09200968bb746905","type":"text","text":"# ⚔️ [[Objects]]\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiBlock\", {\n  folder: \"Wiki/Objects\"\n});\n```\n","x":1006,"y":-523,"width":433,"height":436},
		{"id":"6148c2a642a44939","type":"text","text":"# ⭐ [[Concepts]]\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiBlock\", {\n  folder: \"Wiki/Concepts\"\n});\n```\n","x":574,"y":-523,"width":432,"height":436},
		{"id":"e1d8bcba423cacef","type":"text","text":"# 🏛️ [[History]]\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiBlock\", {\n  folder: \"Wiki/History\"\n});\n```\n","x":141,"y":-523,"width":433,"height":436},
		{"id":"b2d264df133c3dda","type":"text","text":"```dataviewjs\nlet totalWords = 0;\n\n// Get all markdown files in the vault\nconst files = app.vault.getMarkdownFiles();\n\nfor (let file of files) {\n    try {\n        // Read the file content\n        const content = await app.vault.read(file);\n        \n        // Count ALL words (split by whitespace and filter out empty strings)\n        const words = content.split(/\\s+/).filter(word => word.length > 0);\n        totalWords += words.length;\n        \n    } catch (error) {\n        console.log(`Error reading file ${file.path}: ${error}`);\n    }\n}\n\n// Display the formatted word count\ndv.paragraph(`## Total Word Count: ${totalWords.toLocaleString()}`);\n```","x":-1902,"y":-962,"width":491,"height":113},
		{"id":"9d01ab912af90190","type":"text","text":"```dataviewjs\n// Get all files in the vault\nconst files = app.vault.getAllLoadedFiles().filter(file => file.children === undefined);\nconst totalFiles = files.length;\n\n// Display the formatted file count\ndv.paragraph(`# Total Files: ${totalFiles.toLocaleString()}`);\n```","x":-1902,"y":-849,"width":491,"height":113},
		{"id":"92442653ad9f7131","type":"text","text":"```dataviewjs\nawait dv.view(\"z_scripts/dataview/summary\", {\n  folder: \"Story/TITLE\"\n});\n```","x":-1898,"y":-134,"width":499,"height":774},
		{"id":"d04872a146a262c5","type":"text","text":"# 🧍[[Characters]]\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiBlock\", {\n  folder: \"Wiki/Characters\"\n});\n```\n","x":141,"y":-958,"width":433,"height":436},
		{"id":"e3ffac1adbedcb1d","type":"text","text":"# List of Articles\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/wikiAlpha\", {\n  folder: \"Wiki\"\n});\n```\n","x":139,"y":-87,"width":1300,"height":724},
		{"id":"49daed2ce62385b6","type":"text","text":"```dataviewjs\nawait dv.view(\"z_scripts/dataview/roughdraft\", {\n  folder: \"Story/TITLE\"\n});\n```","x":-1399,"y":-134,"width":499,"height":774},
		{"id":"92d29312b02a4d59","type":"text","text":"# TITLE\n### Outline Status\n### Summary Status\n### Rough Draft Status\n### Final Draft Status\n### Published Status","x":-1899,"y":-501,"width":500,"height":367},
		{"id":"e9c329acb72144c9","type":"text","text":"# TITLE\n### Outline Status\n### Summary Status\n### Rough Draft Status\n### Final Draft Status\n### Published Status","x":-400,"y":-501,"width":500,"height":367},
		{"id":"1c8a6fd5f3164951","type":"text","text":"# TITLE\n### Outline Status\n### Summary Status\n### Rough Draft Status\n### Final Draft Status\n### Published Status","x":-1399,"y":-501,"width":500,"height":367},
		{"id":"3e31c80ad987ee58","type":"text","text":"# TITLE\n### Outline Status\n### Summary Status\n### Rough Draft Status\n### Final Draft Status\n### Published Status","x":-899,"y":-501,"width":500,"height":367},
		{"id":"4b765c03a8a12c29","type":"text","text":"```dataviewjs\nawait dv.view(\"z_scripts/dataview/finaldraft\", {\n  folder: \"Story/TITLE\"\n});\n```","x":-900,"y":-134,"width":499,"height":774},
		{"id":"913e5f11076ea24d","type":"text","text":" # Last Modified Wiki\n```dataviewjs\nawait dv.view(\"z_scripts/dataview/latest-wiki\", {\n  folder: \"Wiki\",\n  tags: [\"article\"],\n  emojiMap: {\n    \"Wiki/Characters\": \"🧍\",\n    \"Wiki/Settings\": \"🌐\",\n    \"Wiki/History\": \"🏛️\",\n    \"Wiki/Groups\": \"🧑‍🤝‍🧑\",\n    \"Wiki/Concepts\": \"⭐\",\n    \"Wiki/Objects\": \"⚔️\"\n  }\n});\n```","x":-389,"y":-965,"width":490,"height":341},
		{"id":"e81e1b7d961643d1","type":"text","text":"```dataviewjs\nlet totalProseWords = 0;\n\n// Get all markdown files in the vault\nconst files = app.vault.getMarkdownFiles();\n\nfor (let file of files) {\n    try {\n        // Get file metadata using Dataview API\n        const page = dv.page(file.path);\n        const tags = page?.tags || [];\n        \n        // Check if file has the right tag and is in the right folder\n        const isStoryScene = file.path.startsWith('Story/') && tags.includes('scene');\n        const isWikiArticle = file.path.startsWith('Wiki/') && tags.includes('article');\n        \n        if (isStoryScene || isWikiArticle) {\n            // Read the file content\n            const content = await app.vault.read(file);\n            \n            // Remove markdown formatting and count words\n            const plainText = content\n                .replace(/```[\\s\\S]*?```/g, '') // Remove code blocks\n                .replace(/`[^`]*`/g, '') // Remove inline code\n                .replace(/!\\[.*?\\]\\(.*?\\)/g, '') // Remove images\n                .replace(/\\[.*?\\]\\(.*?\\)/g, '') // Remove links (keep text)\n                .replace(/#+ /g, '') // Remove headers\n                .replace(/\\*\\*([^*]+)\\*\\*/g, '$1') // Remove bold formatting\n                .replace(/\\*([^*]+)\\*/g, '$1') // Remove italic formatting\n                .replace(/~~([^~]+)~~/g, '$1') // Remove strikethrough\n                .replace(/---[\\s\\S]*?---/g, '') // Remove frontmatter\n                .replace(/^\\s*[-*+]\\s+/gm, '') // Remove list markers\n                .replace(/^\\s*\\d+\\.\\s+/gm, '') // Remove numbered list markers\n                .replace(/\\n+/g, ' ') // Replace newlines with spaces\n                .trim();\n            \n            // Count words (split by whitespace and filter out empty strings)\n            const words = plainText.split(/\\s+/).filter(word => word.length > 0);\n            totalProseWords += words.length;\n        }\n        \n    } catch (error) {\n        console.log(`Error reading file ${file.path}: ${error}`);\n    }\n}\n\n// Display the formatted prose word count\ndv.paragraph(`# Total Prose Words: ${totalProseWords.toLocaleString()}`);\n```","x":-1411,"y":-962,"width":491,"height":113},
		{"id":"0ba7db855ef77cab","type":"text","text":" # Last Modified Story\n ```dataviewjs\nawait dv.view(\"z_scripts/dataview/latest-scene\", {\n  folder: \"Story\",\n  tags: [\"scene\"]\n});\n```","x":-880,"y":-965,"width":492,"height":341},
		{"id":"003750d01a862da1","type":"text","text":"```dataviewjs\n// Get all files tagged with 'article'\nconst articleFiles = dv.pages('#article');\nconst totalArticleFiles = articleFiles.length;\n\n// Display the formatted article file count\ndv.paragraph(`# Total Articles: ${totalArticleFiles.toLocaleString()}`);\n```","x":-1411,"y":-737,"width":491,"height":113},
		{"id":"dde3646efa07fb3d","type":"text","text":"```dataviewjs\n// Get all files tagged with 'scene'\nconst sceneFiles = dv.pages('#scene');\nconst totalSceneFiles = sceneFiles.length;\n\n// Display the formatted scene file count\ndv.paragraph(`# Total Scenes: ${totalSceneFiles.toLocaleString()}`);\n```","x":-1411,"y":-849,"width":491,"height":113},
		{"id":"8f6dbe3e3819b2cb","type":"text","text":"```dataviewjs\nawait dv.view(\"z_scripts/dataview/published\", {\n  folder: \"Story/TITLE\"\n});\n```","x":-400,"y":-134,"width":499,"height":774}
	],
	"edges":[]
}